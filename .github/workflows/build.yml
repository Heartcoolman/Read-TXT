name: Build iOS App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Show Xcode version
      run: xcodebuild -version
    
    - name: List available schemes
      run: |
        xcodebuild -project TxtReader.xcodeproj -list
    
    - name: Build project
      run: |
        xcodebuild build \
          -project TxtReader.xcodeproj \
          -scheme TxtReader \
          -sdk iphoneos \
          -configuration Release \
          -derivedDataPath ./build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          DEVELOPMENT_TEAM="" \
          ONLY_ACTIVE_ARCH=NO
    
    - name: Debug - List build output
      run: |
        echo "========================================="
        echo "Listing build directory structure:"
        echo "========================================="
        ls -la ./build/Build/Products/ || echo "Products directory not found"
        echo ""
        echo "Searching for all .app bundles:"
        find ./build -name "*.app" -type d || echo "No .app found"
        echo ""
        echo "Complete build tree:"
        ls -R ./build/Build/Products/ || echo "Cannot list Products"
    
    - name: Create IPA
      run: |
        echo "========================================="
        echo "Creating IPA package"
        echo "========================================="
        
        # Search for .app bundle in entire build directory
        APP_PATH=$(find ./build -name "*.app" -type d | head -1)
        
        if [ -z "$APP_PATH" ]; then
          echo "❌ Error: No .app bundle found in build directory"
          echo ""
          echo "Build may have failed. Check previous steps for errors."
          echo "Listing entire build directory:"
          ls -R ./build || echo "Build directory is empty"
          exit 1
        fi
        
        echo "✅ Found app bundle at: $APP_PATH"
        
        # Get app name
        APP_NAME=$(basename "$APP_PATH")
        echo "📱 App name: $APP_NAME"
        
        # Create IPA
        mkdir -p Payload
        cp -R "$APP_PATH" Payload/
        
        echo "📦 Creating IPA archive..."
        cd Payload
        zip -r ../TxtReader-unsigned.ipa *
        cd ..
        rm -rf Payload
        
        echo "✅ IPA created successfully"
        ls -lh TxtReader-unsigned.ipa
        
        # Verify IPA contents
        echo ""
        echo "IPA contents:"
        unzip -l TxtReader-unsigned.ipa | head -20
    
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: TxtReader-unsigned
        path: TxtReader-unsigned.ipa
        retention-days: 30
    
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          ## TXT阅读器 - 未签名版本
          
          这是自动构建的未签名 IPA 文件。
          
          ### 安装方法
          
          1. **使用 AltStore**:
             - 在 iPad 上安装 AltStore
             - 下载 IPA 文件
             - 通过 AltStore 安装
          
          2. **使用 Sideloadly**:
             - 在电脑上安装 Sideloadly
             - 连接 iPad
             - 使用 Apple ID 签名并安装
          
          3. **使用 TrollStore** (如果已越狱):
             - 直接安装 IPA 文件
          
          ### 功能特性
          
          - ✅ WebDAV 在线阅读
          - ✅ 智能编码识别（支持 UTF-8、GBK、Big5 等）
          - ✅ 分页/滚动双模式
          - ✅ 自动章节识别
          - ✅ 书签和标注
          - ✅ 全文搜索
          - ✅ TTS 朗读
          - ✅ iPad 分屏支持
          - ✅ 键盘快捷键
          
          构建时间: ${{ github.event.head_commit.timestamp }}
        files: TxtReader-unsigned.ipa
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

